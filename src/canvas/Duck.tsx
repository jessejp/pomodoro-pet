/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { usePomodoro } from "../store/usePomodoro";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube5103: THREE.SkinnedMesh;
    Cube5103_1: THREE.SkinnedMesh;
    Cube5103_2: THREE.SkinnedMesh;
    body: THREE.Bone;
  };
  materials: {
    ["White.026"]: THREE.MeshStandardMaterial;
    ["Yellow.043"]: THREE.MeshStandardMaterial;
    ["Black.027"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "PositionOuterFrame" | "StartStudying";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Duck(props: JSX.IntrinsicElements["group"]) {
  const { pomodoroPhase } = usePomodoro();
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/duck_merge.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  useEffect(() => {
    const animationName =
      pomodoroPhase === "none" ? "PositionOuterFrame" : "StartStudying";
    const action = actions[animationName];
    if (!action) return;
    action.reset().fadeIn(0.5).setLoop(THREE.LoopOnce, 0).play();
    action.clampWhenFinished = true;
    return () => action.fadeOut(0.5);
  }, [pomodoroPhase]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="DuckArmature">
          <group name="character_duck">
            <skinnedMesh
              name="Cube5103"
              geometry={nodes.Cube5103.geometry}
              material={materials["White.026"]}
              skeleton={nodes.Cube5103.skeleton}
            />
            <skinnedMesh
              name="Cube5103_1"
              geometry={nodes.Cube5103_1.geometry}
              material={materials["Yellow.043"]}
              skeleton={nodes.Cube5103_1.skeleton}
            />
            <skinnedMesh
              name="Cube5103_2"
              geometry={nodes.Cube5103_2.geometry}
              material={materials["Black.027"]}
              skeleton={nodes.Cube5103_2.skeleton}
            />
          </group>
          <primitive object={nodes.body} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/duck_merge.glb");
